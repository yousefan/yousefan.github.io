{"version":3,"sources":["webpack:///./src/views/pages/product/podcast/PodcastItem.vue?c8ea","webpack:///src/views/pages/product/podcast/PodcastItem.vue","webpack:///./src/views/pages/product/podcast/PodcastItem.vue?56b4","webpack:///./src/views/pages/product/podcast/PodcastItem.vue?92ef","webpack:///./src/views/pages/product/podcast/PodcastItem.vue?3be0"],"names":["render","_vm","this","_h","$createElement","_c","_self","_e","loading","access","attrs","staticClass","staticStyle","_v","_s","podcast","item","title","currentTimeText","durationText","ref","domProps","currentTime","on","$event","updateInputUi","bookmark","removeFromBookmark","addToBookmark","backward","playAudioLoading","playing","playAudio","forward","transcriptContainer","staticRenderFns","mixins","name","data","podcastItemFid","podcastId","productId","subject","audio","currentSegmentIndex","transcriptSegments","transcriptSegmentSpans","activeTranscriptSegmentStyle","lastTime","isSentPodcastPlayCount","timePlayed","raf","whilePlaying","currentTranscriptSegmentSpan","previousTranscriptSegmentSpan","mounted","methods","getPodcastItem","axios","headers","Accept","Authorization","then","cancelAnimationFrame","requestAnimationFrame","sendPodcastPlayCount","sendPodcastPlayTime","time","setupAudio","setTimeout","initSliderEvents","document","item_fid","renderTranscript","tgSpan","wordSpan","temp","checkIfWordIsImportant","word","importantWords","clearHighlight","index","beforeDestroy","console","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAAEJ,EAAW,QAAEI,EAAG,gBAAgBJ,EAAIM,KAAON,EAAIO,SAAYP,EAAIQ,OAAiFR,EAAIM,KAA7EF,EAAG,YAAY,CAACK,MAAM,CAAC,QAAU,wCAAiDL,EAAG,QAAQ,CAACK,MAAM,CAAC,GAAK,YAAY,KAAO,OAAQT,EAAIO,SAAWP,EAAIQ,OAAQJ,EAAG,MAAM,CAACM,YAAY,+CAA+CC,YAAY,CAAC,UAAU,SAAS,CAACP,EAAG,MAAM,CAACM,YAAY,yCAAyCC,YAAY,CAAC,UAAY,QAAQ,CAACP,EAAG,UAAU,CAACA,EAAG,IAAI,CAACM,YAAY,eAAe,CAACV,EAAIY,GAAGZ,EAAIa,GAAGb,EAAIc,QAAQC,KAAKC,UAAUZ,EAAG,MAAM,CAACM,YAAY,wBAAwB,CAACN,EAAG,KAAK,CAACM,YAAY,aAAa,CAACV,EAAIY,GAAGZ,EAAIa,GAAGb,EAAIiB,oBAAoBb,EAAG,KAAK,CAACM,YAAY,aAAa,CAACV,EAAIY,GAAGZ,EAAIa,GAAGb,EAAIkB,mBAAmBd,EAAG,MAAM,CAACM,YAAY,OAAO,CAACN,EAAG,MAAM,CAACM,YAAY,iBAAiB,CAACN,EAAG,QAAQ,CAACe,IAAI,SAAST,YAAY,eAAeC,YAAY,CAAC,MAAQ,QAAQF,MAAM,CAAC,KAAO,QAAQ,IAAM,IAAI,IAAM,SAASW,SAAS,CAAC,MAAQpB,EAAIqB,aAAaC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOvB,EAAIwB,cAAc,aAAepB,EAAG,MAAM,CAACM,YAAY,uCAAuC,CAAmB,OAAjBV,EAAIyB,SAAmBrB,EAAG,YAAY,CAACK,MAAM,CAAC,GAAK,sBAAsB,YAAY,UAAU,KAAO,iBAAiBa,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOvB,EAAI0B,yBAAyB1B,EAAIM,KAAuB,OAAjBN,EAAIyB,SAAmBrB,EAAG,YAAY,CAACK,MAAM,CAAC,GAAK,mBAAmB,KAAO,SAAS,YAAY,UAAU,KAAO,iBAAiBa,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOvB,EAAI2B,oBAAoB3B,EAAIM,KAAKF,EAAG,MAAM,CAACM,YAAY,QAAQ,CAACN,EAAG,YAAY,CAACM,YAAY,OAAOD,MAAM,CAAC,YAAY,UAAU,KAAO,mBAAmBa,GAAG,CAAC,MAAQtB,EAAI4B,YAAYxB,EAAG,YAAY,CAACM,YAAY,OAAOD,MAAM,CAAC,SAAWT,EAAI6B,iBAAiB,YAAY,UAAU,KAAO7B,EAAI8B,QAAU,aAAc,aAAaR,GAAG,CAAC,MAAQtB,EAAI+B,aAAa3B,EAAG,YAAY,CAACM,YAAY,OAAOD,MAAM,CAAC,YAAY,UAAU,KAAO,kBAAkBa,GAAG,CAAC,MAAQtB,EAAIgC,YAAY,GAAG5B,EAAG,MAAM,CAACM,YAAY,UAAU,MAAM,KAAKV,EAAIM,MAAON,EAAIO,SAAWP,EAAIQ,OAAQJ,EAAG,MAAM,CAACM,YAAY,mCAAmC,CAACN,EAAG,MAAM,CAACM,YAAY,yCAAyCC,YAAY,CAAC,UAAY,QAAQ,CAACP,EAAG,aAAa,CAACK,MAAM,CAAC,SAAW,SAAS,CAACT,EAAIY,GAAG,wBAAwBR,EAAG,UAAU,CAACgB,SAAS,CAAC,UAAYpB,EAAIa,GAAGb,EAAIiC,yBAAyB,KAAKjC,EAAIM,MAAM,IACj3E4B,EAAkB,G,8CCsEP,GACfC,gBACAC,mBACAC,KAHA,WAGA,WACA,OAEA9B,WACAC,UAEAqB,oBACAC,WAEAQ,0CACAC,eACAC,uCACA1B,aACA2B,aACAhB,YAEAiB,WACArB,cACAJ,wBACAC,qBAEAyB,sBACAC,sBACAC,0BACAC,yFAEAC,oBAEAC,0BAEAf,yBACAgB,aACAC,SACAC,wBAGA,4BACA,eACA,uBAGA,mEACA,uDAEA,8BACA,8CACA,YACA,yBAEA,yCAGA,GAFAC,uCAEA,KACA,wBACA,oDACA,yCACAC,iBAGA,wBACA,sBAGA,0CACA,yBAEA,qBACA,+CAKAC,QA3EA,WA4EA,uBAGAC,SAEAC,eAFA,WAEA,WAEA,gBACAC,gGACAC,SACAC,0BACAC,uCAEAC,MAAA,YACA,aAEA,eACA,kBACA,gEACA,cAEA,YACA,iBACA,8BACA,8BACA,uCACA,8BACA,wDACA,gBAGA,0EAKA7B,QAjCA,WAkCA,4DACA,8CACA,2BACA,qFAKAJ,SA1CA,WA2CA,6BACA,8CACA,2BACA,qFAKAG,UAnDA,WAoDA,aAKA,eACA,mBACA,gBACA+B,+BACA,6BARA,kBACA,gBACA,yDACAC,2CASAC,qBAjEA,WAiEA,WACAP,6CACA3C,wBAEA,CACA4C,SACAC,0BACAC,uCAEAC,MAAA,YACA,8CAIAI,oBA/EA,WA+EA,WACAR,4CACA3C,uBACAoD,sBAEA,CACAR,SACAC,0BACAC,uCAEAC,MAAA,YACA,iBACA,oBAKAM,WAhGA,WAgGA,WACA,gDACA,4DACA,yBACA,uCACA,4BACA,iDACA,sBACA,uBAEAC,uBACA,uBACA,MAGAC,iBA/GA,WA+GA,WAEA,qCACA,uDACA,gBACAP,6BAGA,sCACA,8DAEA,0CACAQ,mDAGA,IADA,8BACA,uCACA,8BACA,oCACA,wBACA,OAIA,gBACAP,wCAKArC,mBA5IA,WA4IA,WACA,yCACA+B,uDACAC,SACAC,0BACAC,uCAEAC,MAAA,YACA,qCACA,eACA,gBAEA,0EAKAlC,cA7JA,WA6JA,WACA,sCACA8B,+BACAc,8BACA,CACAb,SACAC,0BACAC,uCAEAC,MAAA,YACA,kCACA,eACA,sBAEA,0EAKAW,iBAhLA,SAgLA1D,GACA,oCACAmB,gCACAA,2CAKA,IAHA,iCACA,eAEA,oBACA,WACA,iCACAwC,mBAEA,IADA,wBACA,oBACA,WAEA,GADA,iCACA,gCACAC,sBAQAD,iBAEAxC,iBAEA,oCACA0C,iBACA,sCAIAC,uBAnNA,SAmNAC,EAAAC,GACA,4BACA,WACA,cACA,SAEA,aAGAC,eA5NA,SA4NAC,GACA,iCACAV,kDAIAW,cAjTA,WAkTAC,0CCzXkY,I,wBCQ9XC,EAAY,eACd,EACApF,EACAmC,GACA,EACA,KACA,WACA,MAIa,aAAAiD,E,kECnBf","file":"js/chunk-1c9d00f0.4e96cc41.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.loading)?_c('page-loading'):_vm._e(),(!_vm.loading && !_vm.access)?_c('no-access',{attrs:{\"message\":\"You have no access to this service\"}}):_vm._e(),_c('audio',{attrs:{\"id\":\"audioPlay\",\"loop\":\"\"}}),(!_vm.loading && _vm.access)?_c('div',{staticClass:\"row justify-content-center scoped-sticky-pos\",staticStyle:{\"z-index\":\"1000\"}},[_c('div',{staticClass:\"col col-lg-6 col-md-6 col-sm-12 col-12\",staticStyle:{\"direction\":\"ltr\"}},[_c('vx-card',[_c('p',{staticClass:\"text-center\"},[_vm._v(_vm._s(_vm.podcast.item.title))]),_c('div',{staticClass:\"flex justify-between\"},[_c('h5',{staticClass:\"font-bold\"},[_vm._v(_vm._s(_vm.currentTimeText))]),_c('h5',{staticClass:\"font-bold\"},[_vm._v(_vm._s(_vm.durationText))])]),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col col-md-12\"},[_c('input',{ref:\"slider\",staticClass:\"audio-slider\",staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"10000\"},domProps:{\"value\":_vm.currentTime},on:{\"input\":function($event){return _vm.updateInputUi(10000)}}})])]),_c('div',{staticClass:\"flex justify-between flex-wrap mt-3\"},[(_vm.bookmark !== null)?_c('vs-button',{attrs:{\"id\":\"remove-bookmark-btn\",\"icon-pack\":\"feather\",\"icon\":\"icon-bookmark\"},on:{\"click\":function($event){return _vm.removeFromBookmark()}}}):_vm._e(),(_vm.bookmark === null)?_c('vs-button',{attrs:{\"id\":\"add-bookmark-btn\",\"type\":\"border\",\"icon-pack\":\"feather\",\"icon\":\"icon-bookmark\"},on:{\"click\":function($event){return _vm.addToBookmark()}}}):_vm._e(),_c('div',{staticClass:\"flex\"},[_c('vs-button',{staticClass:\"ml-4\",attrs:{\"icon-pack\":\"feather\",\"icon\":\"icon-rotate-ccw\"},on:{\"click\":_vm.backward}}),_c('vs-button',{staticClass:\"ml-4\",attrs:{\"disabled\":_vm.playAudioLoading,\"icon-pack\":\"feather\",\"icon\":_vm.playing ? 'icon-pause': 'icon-play'},on:{\"click\":_vm.playAudio}}),_c('vs-button',{staticClass:\"ml-4\",attrs:{\"icon-pack\":\"feather\",\"icon\":\"icon-rotate-cw\"},on:{\"click\":_vm.forward}})],1),_c('div',{staticClass:\"flex\"})],1)])],1)]):_vm._e(),(!_vm.loading && _vm.access)?_c('div',{staticClass:\"row justify-content-center mt-8\"},[_c('div',{staticClass:\"col col-lg-6 col-md-6 col-sm-12 col-12\",staticStyle:{\"direction\":\"ltr\"}},[_c('vs-divider',{attrs:{\"position\":\"left\"}},[_vm._v(\"Podcast Transcript\")]),_c('vx-card',{domProps:{\"innerHTML\":_vm._s(_vm.transcriptContainer)}})],1)]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <page-loading v-if=\"loading\"></page-loading>\n    <no-access v-if=\"!loading && !access\"\n               message=\"You have no access to this service\"></no-access>\n\n    <audio id=\"audioPlay\" loop></audio>\n\n    <div v-if=\"!loading && access\" class=\"row justify-content-center scoped-sticky-pos\" style=\"z-index: 1000\">\n      <div class=\"col col-lg-6 col-md-6 col-sm-12 col-12\" style=\"direction: ltr\">\n\n        <vx-card>\n          <p class=\"text-center\">{{ podcast.item.title }}</p>\n          <div class=\"flex justify-between\">\n            <h5 class=\"font-bold\">{{ currentTimeText }}</h5>\n            <h5 class=\"font-bold\">{{ durationText }}</h5>\n          </div>\n          <div class=\"row\">\n            <div class=\"col col-md-12\">\n              <input @input=\"updateInputUi(10000)\"\n                     class=\"audio-slider\" ref=\"slider\"\n                     type=\"range\" style=\"width: 100%\"\n                     min=\"0\"\n                     max=\"10000\"\n                     :value=\"currentTime\">\n            </div>\n          </div>\n\n          <div class=\"flex justify-between flex-wrap mt-3\">\n\n            <vs-button id=\"remove-bookmark-btn\" v-if=\"bookmark !== null\" @click=\"removeFromBookmark()\"\n                       icon-pack=\"feather\" icon=\"icon-bookmark\"></vs-button>\n            <vs-button id=\"add-bookmark-btn\" v-if=\"bookmark === null\" @click=\"addToBookmark()\" type=\"border\"\n                       icon-pack=\"feather\" icon=\"icon-bookmark\"></vs-button>\n\n\n            <div class=\"flex\">\n\n              <vs-button @click=\"backward\" class=\"ml-4\" icon-pack=\"feather\" icon=\"icon-rotate-ccw\"></vs-button>\n              <vs-button @click=\"playAudio\" :disabled=\"playAudioLoading\" class=\"ml-4\" icon-pack=\"feather\"\n                         :icon=\"playing ? 'icon-pause': 'icon-play'\">\n              </vs-button>\n\n              <vs-button @click=\"forward\" class=\"ml-4\" icon-pack=\"feather\" icon=\"icon-rotate-cw\"></vs-button>\n            </div>\n\n            <div class=\"flex\">\n            </div>\n          </div>\n        </vx-card>\n      </div>\n    </div>\n\n    <div v-if=\"!loading && access\" class=\"row justify-content-center mt-8\">\n      <div class=\"col col-lg-6 col-md-6 col-sm-12 col-12\" style=\"direction: ltr\">\n        <vs-divider position=\"left\">Podcast Transcript</vs-divider>\n        <vx-card v-html=\"transcriptContainer\">\n\n        </vx-card>\n\n      </div>\n    </div>\n\n\n  </div>\n</template>\n\n<script>\nimport axios from '../../../../http/axios'\nimport mixins from '../../../../mixins'\n\nexport default {\n  mixins: [mixins],\n  name: 'PodcastItem',\n  data () {\n    return {\n\n      loading: true,\n      access: true,\n\n      playAudioLoading: true,\n      playing: false,\n\n      podcastItemFid: this.$route.params.itemFid,\n      podcastId: null,\n      productId: this.$route.params.productId,\n      podcast: null,\n      subject: null,\n      bookmark: false,\n\n      audio: null,\n      currentTime: 0,\n      currentTimeText: '00:00',\n      durationText: '00:00',\n\n      currentSegmentIndex: 0,\n      transcriptSegments: [],\n      transcriptSegmentSpans: [],\n      activeTranscriptSegmentStyle: 'border-radius: 4px;background-color: rgba(0, 0, 0, 0.10);',\n\n      lastTime: Date.now(),\n\n      isSentPodcastPlayCount: false,\n\n      transcriptContainer: null,\n      timePlayed: 0,\n      raf: null,\n      whilePlaying: () => {\n\n        // this is used to calculate played time in seconds\n        if (Date.now() - this.lastTime > 1000) {\n          this.timePlayed++;\n          this.lastTime = Date.now();\n        }\n\n        this.currentTime = Math.floor((this.audio.currentTime / this.audio.duration) * 10000)\n        this.currentTimeText = this.calculateTime(this.audio.currentTime)\n\n        let currentTimeMillis = this.audio.currentTime * 1000\n        let currentTranscriptSegment = this.transcriptSegments[this.currentSegmentIndex]\n        if (currentTranscriptSegment != null) {\n          let end = currentTranscriptSegment.start + currentTranscriptSegment.duration\n\n          let currentTranscriptSegmentSpan = document.getElementById('tg-' + currentTranscriptSegment.start)\n          currentTranscriptSegmentSpan.style = this.activeTranscriptSegmentStyle\n\n          if (currentTimeMillis > end) {\n            this.currentSegmentIndex++\n            let previousTranscriptSegment = this.transcriptSegments[this.currentSegmentIndex - 1]\n            let previousTranscriptSegmentSpan = document.getElementById('tg-' + previousTranscriptSegment.start)\n            previousTranscriptSegmentSpan.style = ''\n          }\n        } else {\n          this.currentSegmentIndex = 0\n          this.audio.currentTime = 0\n        }\n\n        if (this.audio.currentTime > this.audio.duration - 0.5) {\n          this.currentSegmentIndex = 0\n        }\n        this.updateInputUi(10000)\n        this.raf = requestAnimationFrame(this.whilePlaying)\n      }\n    }\n  },\n\n  mounted () {\n    this.getPodcastItem()\n  },\n\n  methods: {\n\n    getPodcastItem () {\n\n      this.loading = true\n      axios.get(`/api/store/products/${this.productId}/items/${this.podcastItemFid}`, {\n        headers: {\n          Accept: 'application/json',\n          Authorization: this.getAccessToken()\n        }\n      }).then(res => {\n        this.loading = false\n\n        if (res.status === 200) {\n          if (res.data.no_access) {\n            this.simpleNotify(this.NOTIFY_DANGER_TITLE, res.data.no_access, 'danger')\n            this.access = false\n          } else {\n            this.access = true\n            this.podcast = res.data\n            this.renderTranscript(this.podcast)\n            this.podcastId = this.podcast.item.id\n            this.subject = this.podcast.item.subject.title\n            this.bookmark = this.podcast.bookmark\n            this.transcriptSegments = this.podcast.item.transcript_segments\n            this.setupAudio()\n          }\n        } else {\n          this.simpleNotify(this.NOTIFY_DANGER_TITLE, 'something went wrong', 'danger')\n        }\n      })\n    },\n\n    forward () {\n      if (this.currentSegmentIndex < this.transcriptSegments.length - 1) {\n        this.clearHighlight(this.currentSegmentIndex)\n        this.currentSegmentIndex++\n        this.audio.currentTime = (this.transcriptSegments[this.currentSegmentIndex].start / 1000)\n      }\n\n    },\n\n    backward () {\n      if (this.currentSegmentIndex > 0) {\n        this.clearHighlight(this.currentSegmentIndex)\n        this.currentSegmentIndex--\n        this.audio.currentTime = (this.transcriptSegments[this.currentSegmentIndex].start / 1000)\n      }\n\n    },\n\n    playAudio () {\n      if (!this.playing) {\n        this.audio.play();\n        this.playing = true;\n        if (!this.isSentPodcastPlayCount) this.sendPodcastPlayCount();\n        requestAnimationFrame(this.whilePlaying)\n      } else if (this.playing) {\n        this.audio.pause();\n        this.playing = false;\n        cancelAnimationFrame(this.raf);\n        this.sendPodcastPlayTime();\n      }\n    },\n\n    sendPodcastPlayCount () {\n      axios.post(`/api/stats/podcast-playcount/`, {\n        podcast: this.podcastId\n        },\n        {\n          headers: {\n            Accept: 'application/json',\n            Authorization: this.getAccessToken()\n          }\n        }).then(res => {\n        this.isSentPodcastPlayCount = !!res.data.podcast;\n      })\n    },\n\n    sendPodcastPlayTime(){\n      axios.post(`/api/stats/podcast-playtime/`, {\n          podcast: this.podcastId,\n          time: this.timePlayed\n        },\n        {\n          headers: {\n            Accept: 'application/json',\n            Authorization: this.getAccessToken()\n          }\n        }).then(res => {\n        if (res.data.podcast){\n          this.timePlayed = 0\n        }\n      })\n    },\n\n    setupAudio () {\n      this.audio = document.getElementById('audioPlay')\n      this.audio.src = this.$podcastUrl + this.podcast.item.audio_url\n      this.playAudioLoading = true\n      this.audio.onloadedmetadata = () => {\n        this.duration = this.audio.duration\n        this.durationText = this.calculateTime(this.audio.duration)\n        this.audio.currentTime = 0\n        this.playAudioLoading = false\n      }\n      setTimeout(() => {\n        this.initSliderEvents()\n      }, 200)\n    },\n\n    initSliderEvents () {\n\n      this.$refs.slider.oninput = () => {\n        this.currentTimeText = this.calculateTime(this.audio.currentTime)\n        if (!this.audio.paused) {\n          cancelAnimationFrame(this.raf)\n        }\n      }\n      this.$refs.slider.onchange = () => {\n        this.audio.currentTime = (this.$refs.slider.value / 10000) * this.audio.duration\n\n        this.transcriptSegments.forEach(tg => {\n          document.getElementById('tg-' + tg.start).style = ''\n        })\n        let audioTimeMillis = this.audio.currentTime * 1000\n        for (let i = 0; i < this.transcriptSegments.length; i++) {\n          let tg = this.transcriptSegments[i]\n          if (audioTimeMillis > tg.start && audioTimeMillis < tg.start + tg.duration) {\n            this.currentSegmentIndex = i\n            break\n          }\n        }\n\n        if (!this.audio.paused) {\n          requestAnimationFrame(this.whilePlaying)\n        }\n      }\n    },\n\n    removeFromBookmark () {\n      this.startLoading('remove-bookmark-btn')\n      axios.delete(`/api/bookmarks/${this.bookmark}`, {\n        headers: {\n          Accept: 'application/json',\n          Authorization: this.getAccessToken()\n        }\n      }).then(res => {\n        this.stopLoading('remove-bookmark-btn')\n        if (res.status === 204) {\n          this.bookmark = null\n        } else {\n          this.simpleNotify(this.NOTIFY_DANGER_TITLE, 'something went wrong', 'danger')\n        }\n      })\n    },\n\n    addToBookmark () {\n      this.startLoading('add-bookmark-btn')\n      axios.post(`/api/bookmarks/`, {\n        item_fid: this.podcastItemFid\n      }, {\n        headers: {\n          Accept: 'application/json',\n          Authorization: this.getAccessToken()\n        }\n      }).then(res => {\n        this.stopLoading('add-bookmark-btn')\n        if (res.status === 201) {\n          this.bookmark = res.data.fid\n        } else {\n          this.simpleNotify(this.NOTIFY_DANGER_TITLE, 'something went wrong', 'danger')\n        }\n      })\n    },\n\n    renderTranscript (podcast) {\n      let transcriptContainer = document.createElement('div')\n      transcriptContainer.classList.add('text-justify')\n      transcriptContainer.style = 'font-size:1.25rem; padding: 15px'\n\n      let transcriptSegments = podcast.item.transcript_segments\n      let importantWords = podcast.item.words\n\n      for (let i = 0; i < transcriptSegments.length; i++) {\n        let transcriptSegment = transcriptSegments[i]\n        let tgSpan = document.createElement('span')\n        tgSpan.id = 'tg-' + transcriptSegment.start\n        let splitTranscriptWords = transcriptSegment.text.split(' ')\n        for (let j = 0; j < splitTranscriptWords.length; j++) {\n          let word = splitTranscriptWords[j]\n          let importantWord = this.checkIfWordIsImportant(word, importantWords)\n          let wordSpan = document.createElement('span')\n          wordSpan.innerText = ' ' + word + ' '\n          // if (importantWord !== null) {\n          //   wordSpan.classList.add('tooltip')\n          //   let tooltipSpan = document.createElement('span')\n          //   tooltipSpan.classList.add('tooltip-content')\n          //   tooltipSpan.innerText = importantWord.meaning\n          //   wordSpan.appendChild(tooltipSpan)\n          // }\n          tgSpan.appendChild(wordSpan)\n        }\n        transcriptContainer.appendChild(tgSpan)\n      }\n      let temp = document.createElement('div')\n      temp.appendChild(transcriptContainer)\n      this.transcriptContainer = temp.innerHTML\n\n    },\n\n    checkIfWordIsImportant (word, importantWords) {\n      for (let i = 0; i < importantWords.length; i++) {\n        let importantWord = importantWords[i]\n        if (importantWord.word === word)\n          return importantWord\n      }\n      return null\n    },\n\n    clearHighlight (index) {\n      let tg = this.transcriptSegments[index]\n      document.getElementById('tg-' + tg.start).style = ''\n    }\n  },\n\n  beforeDestroy () {\n    console.log('send played podcast stat')\n  }\n\n\n}\n</script>\n<style scoped>\n.scoped-sticky-pos {\n  position: -webkit-sticky;\n  position: sticky;\n  top: 70px;\n}\n\n\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PodcastItem.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PodcastItem.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PodcastItem.vue?vue&type=template&id=312ad95b&scoped=true&\"\nimport script from \"./PodcastItem.vue?vue&type=script&lang=js&\"\nexport * from \"./PodcastItem.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PodcastItem.vue?vue&type=style&index=0&id=312ad95b&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"312ad95b\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PodcastItem.vue?vue&type=style&index=0&id=312ad95b&scoped=true&lang=css&\""],"sourceRoot":""}